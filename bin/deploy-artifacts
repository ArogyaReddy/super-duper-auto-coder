#!/bin/bash

# 🚀 Auto-Coder Test Artifacts Deployment Helper
# Copies generated artifacts from auto-coder to main SBS_Automation

set -e

AUTO_CODER_DIR="/Users/gadea/auto/auto/qa_automation/auto-coder"
SBS_DIR="/Users/gadea/auto/auto/qa_automation/SBS_Automation"

# Colors for output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${BLUE}🚀 Auto-Coder Test Artifacts Deployment${NC}"
echo -e "${BLUE}===============================================${NC}"

# Check if source directories exist
if [ ! -d "$AUTO_CODER_DIR/SBS_Automation" ]; then
    echo -e "${RED}❌ Source directory not found: $AUTO_CODER_DIR/SBS_Automation${NC}"
    exit 1
fi

# Create destination directories if they don't exist
mkdir -p "$SBS_DIR/features/auto-coder"
mkdir -p "$SBS_DIR/pages/auto-coder"
mkdir -p "$SBS_DIR/steps/auto-coder"

# Copy features and add auto-coder-test tag
if [ -d "$AUTO_CODER_DIR/SBS_Automation/features" ]; then
    echo -e "${YELLOW}📄 Copying feature files and adding @auto-coder-test tag...${NC}"
    cp -r "$AUTO_CODER_DIR/SBS_Automation/features/"* "$SBS_DIR/features/auto-coder/" 2>/dev/null || true
    
    # Add @auto-coder-test tag to feature files if not already present
    for feature_file in "$SBS_DIR/features/auto-coder/"*.feature; do
        if [ -f "$feature_file" ]; then
            # Check if @auto-coder-test tag already exists
            if ! grep -q "@auto-coder-test" "$feature_file"; then
                # Add @auto-coder-test tag before Feature: line
                sed -i '' '/^Feature:/i\
@auto-coder-test' "$feature_file"
                echo -e "${GREEN}  ✅ Added @auto-coder-test tag to $(basename "$feature_file")${NC}"
            else
                echo -e "${YELLOW}  ⚡ Tag already exists in $(basename "$feature_file")${NC}"
            fi
        fi
    done
    echo -e "${GREEN}✅ Features copied and tagged${NC}"
fi

# Copy pages
if [ -d "$AUTO_CODER_DIR/SBS_Automation/pages" ]; then
    echo -e "${YELLOW}📄 Copying page files...${NC}"
    cp -r "$AUTO_CODER_DIR/SBS_Automation/pages/"* "$SBS_DIR/pages/auto-coder/" 2>/dev/null || true
    echo -e "${GREEN}✅ Pages copied${NC}"
fi

# Copy steps and fix import paths
if [ -d "$AUTO_CODER_DIR/SBS_Automation/steps" ]; then
    echo -e "${YELLOW}📄 Copying step files and fixing import paths...${NC}"
    cp -r "$AUTO_CODER_DIR/SBS_Automation/steps/"* "$SBS_DIR/steps/auto-coder/" 2>/dev/null || true
    
    # Fix import paths in step files
    for step_file in "$SBS_DIR/steps/auto-coder/"*.js; do
        if [ -f "$step_file" ]; then
            # Fix require paths: change ../../pages/ to ../../pages/auto-coder/
            sed -i '' "s|require('../../pages/|require('../../pages/auto-coder/|g" "$step_file"
            # Fix any remaining wrong paths
            sed -i '' "s|require('../pages/|require('../../pages/auto-coder/|g" "$step_file"
            echo -e "${GREEN}  ✅ Fixed imports in $(basename "$step_file")${NC}"
        fi
    done
    echo -e "${GREEN}✅ Steps copied and import paths fixed${NC}"
fi

echo -e "${GREEN}🎉 All artifacts deployed successfully!${NC}"

# Summary of deployed files
echo ""
echo -e "${BLUE}📋 Deployment Summary:${NC}"
FEATURE_COUNT=$(find "$SBS_DIR/features/auto-coder" -name "*.feature" 2>/dev/null | wc -l)
PAGE_COUNT=$(find "$SBS_DIR/pages/auto-coder" -name "*.js" 2>/dev/null | wc -l)
STEP_COUNT=$(find "$SBS_DIR/steps/auto-coder" -name "*.js" 2>/dev/null | wc -l)

echo -e "• ${FEATURE_COUNT} feature files deployed"
echo -e "• ${PAGE_COUNT} page files deployed"
echo -e "• ${STEP_COUNT} step files deployed (with corrected import paths)"
echo ""
echo -e "${BLUE}📋 Next Steps:${NC}"
echo -e "1. cd $SBS_DIR"
echo -e "2. node index.js --tags \"@auto-coder-test\" --headed"
echo ""
echo -e "${BLUE}🎯 Advanced Run Options:${NC}"
echo -e "• Environment: --env dev|staging|prod"
echo -e "• Browser: --browser chrome|firefox|edge" 
echo -e "• Mode: --headed|--headless"
echo -e "• Parallel: --parallel 4"
echo -e "• Reports: --reporter allure|html|json"
echo ""
echo -e "${BLUE}🚀 Example Commands:${NC}"
echo -e "# Basic run with visible browser"
echo -e "node index.js --tags \"@auto-coder-test\" --headed"
echo ""
echo -e "# Advanced run with multiple options"
echo -e "node index.js --tags \"@auto-coder-test\" --env staging --headed --reporter allure --parallel 2"
echo ""
echo -e "${GREEN}✨ Ready to test your auto-generated artifacts!${NC}"
