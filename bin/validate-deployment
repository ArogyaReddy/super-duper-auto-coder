#!/bin/bash

# üîß Auto-Coder Deployment Validator
# Validates deployed artifacts and checks for common issues

set -e

SBS_DIR="/Users/gadea/auto/auto/qa_automation/SBS_Automation"

# Colors for output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${BLUE}üîß Auto-Coder Deployment Validator${NC}"
echo -e "${BLUE}===============================================${NC}"

# Check if auto-coder directory exists
if [ ! -d "$SBS_DIR/features/auto-coder" ]; then
    echo -e "${RED}‚ùå No auto-coder features found. Run ./bin/deploy-artifacts first.${NC}"
    exit 1
fi

echo -e "${YELLOW}üìã Validating deployed artifacts...${NC}"

# Validate feature files
FEATURE_ISSUES=0
for feature_file in "$SBS_DIR/features/auto-coder/"*.feature; do
    if [ -f "$feature_file" ]; then
        filename=$(basename "$feature_file")
        
        # Check for @auto-coder-test tag
        if ! grep -q "@auto-coder-test" "$feature_file"; then
            echo -e "${RED}  ‚ùå Missing @auto-coder-test tag: $filename${NC}"
            FEATURE_ISSUES=$((FEATURE_ISSUES + 1))
        else
            echo -e "${GREEN}  ‚úÖ Valid feature: $filename${NC}"
        fi
        
        # Check for proper Feature: line
        if ! grep -q "^Feature:" "$feature_file"; then
            echo -e "${RED}  ‚ùå Missing Feature: line: $filename${NC}"
            FEATURE_ISSUES=$((FEATURE_ISSUES + 1))
        fi
    fi
done

# Validate step files
STEP_ISSUES=0
for step_file in "$SBS_DIR/steps/auto-coder/"*.js; do
    if [ -f "$step_file" ]; then
        filename=$(basename "$step_file")
        
        # Check for correct import paths
        if grep -q "require('../../pages/[^a]" "$step_file"; then
            echo -e "${RED}  ‚ùå Wrong import path (missing auto-coder/): $filename${NC}"
            STEP_ISSUES=$((STEP_ISSUES + 1))
        else
            echo -e "${GREEN}  ‚úÖ Valid step imports: $filename${NC}"
        fi
        
        # Check for syntax errors
        if ! node -c "$step_file" 2>/dev/null; then
            echo -e "${RED}  ‚ùå Syntax error: $filename${NC}"
            STEP_ISSUES=$((STEP_ISSUES + 1))
        fi
    fi
done

# Validate page files
PAGE_ISSUES=0
for page_file in "$SBS_DIR/pages/auto-coder/"*.js; do
    if [ -f "$page_file" ]; then
        filename=$(basename "$page_file")
        
        # Check for proper constructor
        if ! grep -q "constructor(page)" "$page_file"; then
            echo -e "${RED}  ‚ùå Missing constructor: $filename${NC}"
            PAGE_ISSUES=$((PAGE_ISSUES + 1))
        else
            echo -e "${GREEN}  ‚úÖ Valid page constructor: $filename${NC}"
        fi
        
        # Check for syntax errors
        if ! node -c "$page_file" 2>/dev/null; then
            echo -e "${RED}  ‚ùå Syntax error: $filename${NC}"
            PAGE_ISSUES=$((PAGE_ISSUES + 1))
        fi
    fi
done

# Summary
echo ""
echo -e "${BLUE}üìä Validation Summary:${NC}"
TOTAL_ISSUES=$((FEATURE_ISSUES + STEP_ISSUES + PAGE_ISSUES))

if [ $TOTAL_ISSUES -eq 0 ]; then
    echo -e "${GREEN}‚úÖ All artifacts validated successfully!${NC}"
    echo ""
    echo -e "${BLUE}üöÄ Ready to run tests:${NC}"
    echo -e "cd $SBS_DIR"
    echo -e "node index.js --tags \"@auto-coder-test\" --headed"
    exit 0
else
    echo -e "${RED}‚ùå Found $TOTAL_ISSUES issues:${NC}"
    echo -e "  ‚Ä¢ Feature issues: $FEATURE_ISSUES"
    echo -e "  ‚Ä¢ Step issues: $STEP_ISSUES" 
    echo -e "  ‚Ä¢ Page issues: $PAGE_ISSUES"
    echo ""
    echo -e "${YELLOW}üí° Run ./bin/deploy-artifacts again to fix import path issues.${NC}"
    exit 1
fi
