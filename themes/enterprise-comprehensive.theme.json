{
  "id": "enterprise-comprehensive",
  "name": "Enterprise Comprehensive",
  "type": "structural",
  "description": "Enterprise-grade comprehensive theme with extensive documentation and logging",
  "extends": "enterprise",
  "version": "1.0.0",
  "author": "Auto-Coder Framework",
  "supportedFrameworks": ["playwright", "jest", "cypress"],
  "styles": {
    "comments": true,
    "verboseLogging": true,
    "exampleData": true,
    "documentation": "comprehensive",
    "typeAnnotations": true,
    "strictMode": true,
    "screenshots": true,
    "finalScreenshot": true,
    "errorHandling": "comprehensive"
  },
  "patterns": {
    "testStructure": "enterprise",
    "assertions": "business-focused",
    "setup": "factory",
    "errorHandling": "enterprise",
    "logging": "structured",
    "reporting": "detailed",
    "mocking": "comprehensive",
    "pageObjects": "enterprise"
  },
  "conventions": {
    "naming": {
      "variables": "camelCase",
      "functions": "camelCase",
      "classes": "PascalCase",
      "files": "PascalCase",
      "constants": "UPPER_CASE",
      "businessEntities": "PascalCase",
      "testFiles": "PascalCase.test.js",
      "pageObjects": "PascalCase.page.js"
    },
    "structure": {
      "fileOrganization": "domain-driven",
      "layering": "strict",
      "separation": "concerns",
      "importStyle": "grouped",
      "exportStyle": "named"
    }
  },
  "formatting": {
    "indentation": 4,
    "lineLength": 120,
    "quotes": "single",
    "semicolons": true,
    "trailingCommas": "all",
    "braceStyle": "1tbs"
  },
  "frameworks": {
    "playwright": {
      "styles": {
        "pageObjects": true,
        "fixtures": true,
        "screenshots": true,
        "videoRecording": true,
        "tracing": true
      },
      "patterns": {
        "selectors": "role-based",
        "waiting": "auto-wait",
        "assertions": "expect",
        "parallelization": "worker",
        "pageObjects": "enterprise"
      },
      "conventions": {
        "naming": {
          "tests": "*.spec.ts",
          "pages": "*.page.ts",
          "fixtures": "*.fixtures.ts"
        }
      },
      "config": {
        "testDir": "./tests",
        "timeout": 30000,
        "expect": { "timeout": 5000 },
        "fullyParallel": true,
        "retries": 3,
        "use": {
          "screenshot": "only-on-failure",
          "video": "retain-on-failure",
          "trace": "on-first-retry"
        }
      }
    },
    "jest": {
      "styles": {
        "mocking": true,
        "snapshots": true,
        "coverage": true,
        "testingLibrary": true
      },
      "patterns": {
        "testStructure": "describe-it",
        "mocking": "comprehensive",
        "assertions": "jest-expect",
        "setup": "beforeEach"
      },
      "conventions": {
        "naming": {
          "tests": "*.test.js",
          "mocks": "__mocks__",
          "snapshots": "__snapshots__"
        }
      },
      "config": {
        "testEnvironment": "node",
        "coverageThreshold": {
          "global": {
            "branches": 90,
            "functions": 90,
            "lines": 90,
            "statements": 90
          }
        },
        "collectCoverageFrom": [
          "src/**/*.{js,ts}",
          "!src/**/*.test.{js,ts}",
          "!src/**/*.spec.{js,ts}"
        ]
      }
    }
  },
  "quality": {
    "documentation": {
      "required": true,
      "level": "comprehensive",
      "includeExamples": true,
      "includeUsage": true
    },
    "errorHandling": {
      "required": true,
      "level": "comprehensive",
      "includeLogging": true
    },
    "testing": {
      "coverageThreshold": 90,
      "requireUnitTests": true,
      "requireIntegrationTests": true,
      "requireE2ETests": true
    }
  },
  "metadata": {
    "createdAt": "2025-07-17T12:00:00Z",
    "updatedAt": "2025-07-17T12:00:00Z",
    "version": "1.0.0",
    "compatibility": {
      "frameworks": ["playwright", "jest", "cypress"],
      "nodeVersion": ">=16.0.0",
      "browsers": ["chromium", "firefox", "webkit"]
    }
  }
}
